// ------------------------------------------------------------------------------
//  <auto-generated>
//      Этот код был создан построителем кодированных тестов ИП.
//      Версия: 15.0.0.0
//
//      Изменения, внесенные в этот файл, могут привести к неправильной работе кода и будут
//      утрачены при повторном формировании кода.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TESTCodedUILab_16
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethodAddTeacherToDataBase - Используйте "RecordedMethodAddTeacherToDataBaseParams" для передачи параметров в этот метод.
        /// </summary>
        public void RecordedMethodAddTeacherToDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxSearchTextEdit = this.UIForm1Window.UITextBoxSearchTextWindow.UITextBoxSearchTextEdit;
            WinButton uIНайтиButton = this.UIForm1Window.UIНайтиWindow.UIНайтиButton;
            #endregion

            // Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.RecordedMethodAddTeacherToDataBaseParams.UIForm1WindowExePath, this.RecordedMethodAddTeacherToDataBaseParams.UIForm1WindowAlternateExePath);

            // Тип "Alexey" в "textBoxSearchText" надпись
            uITextBoxSearchTextEdit.Text = this.RecordedMethodAddTeacherToDataBaseParams.UITextBoxSearchTextEditText;

            // Щелкните "Найти" кнопка
            Mouse.Click(uIНайтиButton, new Point(54, 7));

            // Тип "Alexey" в "textBoxSearchText" надпись
            uITextBoxSearchTextEdit.Text = this.RecordedMethodAddTeacherToDataBaseParams.UITextBoxSearchTextEditText1;

            // Щелкните "Найти" кнопка
            Mouse.Click(uIНайтиButton, new Point(37, 16));
        }
        
        /// <summary>
        /// AssertMethodTeacher - Используйте "AssertMethodTeacherExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethodTeacher()
        {
            #region Variable Declarations
            WinEdit uITextBoxSearchTextEdit = this.UIForm1Window.UITextBoxSearchTextWindow.UITextBoxSearchTextEdit;
            #endregion

            // Убедитесь, что свойство Name "textBoxSearchText" надпись равняется "Alexey"
            Assert.AreEqual(this.AssertMethodTeacherExpectedValues.UITextBoxSearchTextEditName, uITextBoxSearchTextEdit.Name);
        }
        
        /// <summary>
        /// RecordedMethodFindTeacherToDataBase - Используйте "RecordedMethodFindTeacherToDataBaseParams" для передачи параметров в этот метод.
        /// </summary>
        public void RecordedMethodFindTeacherToDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            WinEdit uITextBoxLSTNAMEEdit = this.UIForm1Window.UITextBoxLSTNAMEWindow.UITextBoxLSTNAMEEdit;
            WinEdit uITextBoxPHONEEdit = this.UIForm1Window.UI__________Window.UITextBoxPHONEEdit;
            WinEdit uITextBoxEXPEdit = this.UIForm1Window.UITextBoxEXPWindow.UITextBoxEXPEdit;
            WinComboBox uIComboBoxGROUPComboBox = this.UIForm1Window.UIComboBoxGROUPWindow.UIComboBoxGROUPComboBox;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            WinButton uIОКButton = this.UIБазаДанныхWindow.UIОКWindow.UIОКButton;
            #endregion

            // Тип "Will" в "textBoxNAME" надпись
            uITextBoxNAMEEdit.Text = this.RecordedMethodFindTeacherToDataBaseParams.UITextBoxNAMEEditText;

            // Тип "Smith" в "textBoxLSTNAME" надпись
            uITextBoxLSTNAMEEdit.Text = this.RecordedMethodFindTeacherToDataBaseParams.UITextBoxLSTNAMEEditText;

            // Тип "(345) 734-8957" в "textBoxPHONE" надпись
            uITextBoxPHONEEdit.Text = this.RecordedMethodFindTeacherToDataBaseParams.UITextBoxPHONEEditText;

            // Тип "Master" в "textBoxEXP" надпись
            uITextBoxEXPEdit.Text = this.RecordedMethodFindTeacherToDataBaseParams.UITextBoxEXPEditText;

            // Выберите "19-ИиСТ" в "comboBoxGROUP" поле со списком
            uIComboBoxGROUPComboBox.SelectedItem = this.RecordedMethodFindTeacherToDataBaseParams.UIComboBoxGROUPComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(43, 11));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(26, 11));
        }
        
        /// <summary>
        /// AssertMethodTeacherFind - Используйте "AssertMethodTeacherFindExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethodTeacherFind()
        {
            #region Variable Declarations
            WinWindow uITextBoxSearchTextWindow = this.UIForm1Window.UITextBoxSearchTextWindow;
            #endregion

            // Убедитесь, что свойство ControlName "textBoxSearchText" окно равняется "Alexey"
            Assert.AreEqual(this.AssertMethodTeacherFindExpectedValues.UITextBoxSearchTextWindowControlName, uITextBoxSearchTextWindow.ControlName);
        }
        
        /// <summary>
        /// AssertMethodEqualTeacherName - Используйте "AssertMethodEqualTeacherNameExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethodEqualTeacherName()
        {
            #region Variable Declarations
            WinWindow uITextBoxSearchTextWindow = this.UIForm1Window.UITextBoxSearchTextWindow;
            #endregion

            // Убедитесь, что свойство ControlName "textBoxSearchText" окно равняется "Alexey"
            Assert.AreEqual(this.AssertMethodEqualTeacherNameExpectedValues.UITextBoxSearchTextWindowControlName, uITextBoxSearchTextWindow.ControlName);
        }
        
        /// <summary>
        /// AssertMethod1 - Используйте "AssertMethod1ExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinEdit uITextBoxSearchTextEdit = this.UIForm1Window.UITextBoxSearchTextWindow.UITextBoxSearchTextEdit;
            #endregion

            // Убедитесь, что свойство Name "textBoxSearchText" надпись равняется "Alexey"
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITextBoxSearchTextEditName, uITextBoxSearchTextEdit.Name);
        }
        
        /// <summary>
        /// AssertMethodAreEqualTeacherSearch - Используйте "AssertMethodAreEqualTeacherSearchExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethodAreEqualTeacherSearch()
        {
            #region Variable Declarations
            WinWindow uITextBoxSearchTextWindow = this.UIForm1Window.UITextBoxSearchTextWindow;
            #endregion

            // Убедитесь, что свойство ControlName "textBoxSearchText" окно равняется "Alexey"
            Assert.AreEqual(this.AssertMethodAreEqualTeacherSearchExpectedValues.UITextBoxSearchTextWindowControlName, uITextBoxSearchTextWindow.ControlName);
        }
        
        /// <summary>
        /// AssertMethodEqual - Используйте "AssertMethodEqualExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethodEqual()
        {
            #region Variable Declarations
            WinEdit uITextBoxAnswerNameEdit = this.UIForm1Window.UITextBoxAnswerNameWindow.UITextBoxAnswerNameEdit;
            #endregion

            // Убедитесь, что свойство Text "textBoxAnswerName" надпись равняется "Alexey"
            Assert.AreEqual(this.AssertMethodEqualExpectedValues.UITextBoxAnswerNameEditText, uITextBoxAnswerNameEdit.Text);

            // Убедитесь, что свойство Text "textBoxAnswerName" надпись равняется "Alexey"
            Assert.AreEqual(this.AssertMethodEqualExpectedValues.UITextBoxAnswerNameEditText1, uITextBoxAnswerNameEdit.Text);
        }
        
        /// <summary>
        /// AssertMethodEqualNameDataBase - Используйте "AssertMethodEqualNameDataBaseExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void AssertMethodEqualNameDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            #endregion

            // Убедитесь, что свойство Text "textBoxNAME" надпись равняется "Will"
            Assert.AreEqual(this.AssertMethodEqualNameDataBaseExpectedValues.UITextBoxNAMEEditText, uITextBoxNAMEEdit.Text);
        }
        
        /// <summary>
        /// RecordedMethodNEWAddTeacherToDATABASE - Используйте "RecordedMethodNEWAddTeacherToDATABASEParams" для передачи параметров в этот метод.
        /// </summary>
        public void RecordedMethodNEWAddTeacherToDATABASE()
        {
            #region Variable Declarations
            WinEdit uITextBoxSPEdit = this.UIForm1Window.UITextBoxSPWindow.UITextBoxSPEdit;
            WinEdit uITextBoxDEPARTMENTEdit = this.UIForm1Window.UITextBoxDEPARTMENTWindow.UITextBoxDEPARTMENTEdit;
            WinEdit uITextBoxNMBEdit = this.UIForm1Window.UITextBoxNMBWindow.UITextBoxNMBEdit;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow1.UIДобавитьButton;
            WinButton uIОКButton = this.UIБазаДанныхWindow.UIОКWindow.UIОКButton;
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            WinEdit uITextBoxLSTNAMEEdit = this.UIForm1Window.UITextBoxLSTNAMEWindow.UITextBoxLSTNAMEEdit;
            WinEdit uITextBoxPHONEEdit = this.UIForm1Window.UI__________Window.UITextBoxPHONEEdit;
            WinEdit uITextBoxEXPEdit = this.UIForm1Window.UITextBoxEXPWindow.UITextBoxEXPEdit;
            WinComboBox uIComboBoxGROUPComboBox = this.UIForm1Window.UIComboBoxGROUPWindow.UIComboBoxGROUPComboBox;
            WinButton uIДобавитьButton1 = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            #endregion

            // Тип "2019-ИВТ-2" в "textBoxSP" надпись
            uITextBoxSPEdit.Text = this.RecordedMethodNEWAddTeacherToDATABASEParams.UITextBoxSPEditText;

            // Тип "ИиПО" в "textBoxDEPARTMENT" надпись
            uITextBoxDEPARTMENTEdit.Text = this.RecordedMethodNEWAddTeacherToDATABASEParams.UITextBoxDEPARTMENTEditText;

            // Тип "438573945" в "textBoxNMB" надпись
            uITextBoxNMBEdit.Text = this.RecordedMethodNEWAddTeacherToDATABASEParams.UITextBoxNMBEditText;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(19, 15));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(36, 17));

            // Тип "Брэд" в "textBoxNAME" надпись
            uITextBoxNAMEEdit.Text = this.RecordedMethodNEWAddTeacherToDATABASEParams.UITextBoxNAMEEditText;

            // Тип "Питт" в "textBoxLSTNAME" надпись
            uITextBoxLSTNAMEEdit.Text = this.RecordedMethodNEWAddTeacherToDATABASEParams.UITextBoxLSTNAMEEditText;

            // Тип "(348) 579-3458" в "textBoxPHONE" надпись
            uITextBoxPHONEEdit.Text = this.RecordedMethodNEWAddTeacherToDATABASEParams.UITextBoxPHONEEditText;

            // Тип "Мастер" в "textBoxEXP" надпись
            uITextBoxEXPEdit.Text = this.RecordedMethodNEWAddTeacherToDATABASEParams.UITextBoxEXPEditText;

            // Выберите "2019-ИВТ-2" в "comboBoxGROUP" поле со списком
            uIComboBoxGROUPComboBox.SelectedItem = this.RecordedMethodNEWAddTeacherToDATABASEParams.UIComboBoxGROUPComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton1, new Point(61, 9));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(22, 13));
        }
        
        /// <summary>
        /// RecordedNEWMethodAddTeacherToDataBase - Используйте "RecordedNEWMethodAddTeacherToDataBaseParams" для передачи параметров в этот метод.
        /// </summary>
        public void RecordedNEWMethodAddTeacherToDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxSPEdit = this.UIForm1Window.UITextBoxSPWindow.UITextBoxSPEdit;
            WinEdit uITextBoxDEPARTMENTEdit = this.UIForm1Window.UITextBoxDEPARTMENTWindow.UITextBoxDEPARTMENTEdit;
            WinEdit uITextBoxNMBEdit = this.UIForm1Window.UITextBoxNMBWindow.UITextBoxNMBEdit;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow1.UIДобавитьButton;
            WinButton uIОКButton = this.UIБазаДанныхWindow.UIОКWindow.UIОКButton;
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            WinEdit uITextBoxLSTNAMEEdit = this.UIForm1Window.UITextBoxLSTNAMEWindow.UITextBoxLSTNAMEEdit;
            WinEdit uITextBoxPHONEEdit = this.UIForm1Window.UI__________Window.UITextBoxPHONEEdit;
            WinEdit uITextBoxEXPEdit = this.UIForm1Window.UITextBoxEXPWindow.UITextBoxEXPEdit;
            WinComboBox uIComboBoxGROUPComboBox = this.UIForm1Window.UIComboBoxGROUPWindow.UIComboBoxGROUPComboBox;
            WinButton uIДобавитьButton1 = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            #endregion

            // Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.RecordedNEWMethodAddTeacherToDataBaseParams.UIForm1WindowExePath, this.RecordedNEWMethodAddTeacherToDataBaseParams.UIForm1WindowAlternateExePath);

            // Тип "2018-ИВТ-2" в "textBoxSP" надпись
            uITextBoxSPEdit.Text = this.RecordedNEWMethodAddTeacherToDataBaseParams.UITextBoxSPEditText;

            // Тип "ИиПО" в "textBoxDEPARTMENT" надпись
            uITextBoxDEPARTMENTEdit.Text = this.RecordedNEWMethodAddTeacherToDataBaseParams.UITextBoxDEPARTMENTEditText;

            // Тип "2385" в "textBoxNMB" надпись
            uITextBoxNMBEdit.Text = this.RecordedNEWMethodAddTeacherToDataBaseParams.UITextBoxNMBEditText;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(44, 12));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(34, 7));

            // Тип "Уилл" в "textBoxNAME" надпись
            uITextBoxNAMEEdit.Text = this.RecordedNEWMethodAddTeacherToDataBaseParams.UITextBoxNAMEEditText;

            // Тип "Смит" в "textBoxLSTNAME" надпись
            uITextBoxLSTNAMEEdit.Text = this.RecordedNEWMethodAddTeacherToDataBaseParams.UITextBoxLSTNAMEEditText;

            // Тип "(348) 985-3746" в "textBoxPHONE" надпись
            uITextBoxPHONEEdit.Text = this.RecordedNEWMethodAddTeacherToDataBaseParams.UITextBoxPHONEEditText;

            // Тип "Мастер" в "textBoxEXP" надпись
            uITextBoxEXPEdit.Text = this.RecordedNEWMethodAddTeacherToDataBaseParams.UITextBoxEXPEditText;

            // Выберите "2018-ИВТ-2" в "comboBoxGROUP" поле со списком
            uIComboBoxGROUPComboBox.SelectedItem = this.RecordedNEWMethodAddTeacherToDataBaseParams.UIComboBoxGROUPComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton1, new Point(38, 5));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(13, 4));
        }
        
        /// <summary>
        /// AddTeacherToDataBase - Используйте "AddTeacherToDataBaseParams" для передачи параметров в этот метод.
        /// </summary>
        public void AddTeacherToDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            WinEdit uITextBoxLSTNAMEEdit = this.UIForm1Window.UITextBoxLSTNAMEWindow.UITextBoxLSTNAMEEdit;
            WinEdit uITextBoxPHONEEdit = this.UIForm1Window.UI__________Window.UITextBoxPHONEEdit;
            WinEdit uITextBoxEXPEdit = this.UIForm1Window.UITextBoxEXPWindow.UITextBoxEXPEdit;
            WinComboBox uIComboBoxGROUPComboBox = this.UIForm1Window.UIComboBoxGROUPWindow.UIComboBoxGROUPComboBox;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            WinButton uIОКButton = this.UIБазаДанныхWindow.UIОКWindow.UIОКButton;
            #endregion

            // Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.AddTeacherToDataBaseParams.UIForm1WindowExePath, this.AddTeacherToDataBaseParams.UIForm1WindowAlternateExePath);

            // Тип "Дуэйн" в "textBoxNAME" надпись
            uITextBoxNAMEEdit.Text = this.AddTeacherToDataBaseParams.UITextBoxNAMEEditText;

            // Тип "Джонсон" в "textBoxLSTNAME" надпись
            uITextBoxLSTNAMEEdit.Text = this.AddTeacherToDataBaseParams.UITextBoxLSTNAMEEditText;

            // Тип "(345) 793-4579" в "textBoxPHONE" надпись
            uITextBoxPHONEEdit.Text = this.AddTeacherToDataBaseParams.UITextBoxPHONEEditText;

            // Тип "Мастер" в "textBoxEXP" надпись
            uITextBoxEXPEdit.Text = this.AddTeacherToDataBaseParams.UITextBoxEXPEditText;

            // Выберите "19-ИиСТ" в "comboBoxGROUP" поле со списком
            uIComboBoxGROUPComboBox.SelectedItem = this.AddTeacherToDataBaseParams.UIComboBoxGROUPComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(23, 7));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(44, 16));
        }
        
        /// <summary>
        /// FindTeacherToDataBase - Используйте "FindTeacherToDataBaseParams" для передачи параметров в этот метод.
        /// </summary>
        public void FindTeacherToDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxSearchTextEdit = this.UIForm1Window.UITextBoxSearchTextWindow.UITextBoxSearchTextEdit;
            WinButton uIНайтиButton = this.UIForm1Window.UIНайтиWindow.UIНайтиButton;
            #endregion

            // Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.FindTeacherToDataBaseParams.UIForm1WindowExePath, this.FindTeacherToDataBaseParams.UIForm1WindowAlternateExePath);

            // Тип "Дуэйн" в "textBoxSearchText" надпись
            uITextBoxSearchTextEdit.Text = this.FindTeacherToDataBaseParams.UITextBoxSearchTextEditText;

            // Щелкните "Найти" кнопка
            Mouse.Click(uIНайтиButton, new Point(24, 14));
        }
        
        /// <summary>
        /// AddAndFindTeacherToDataBase - Используйте "AddAndFindTeacherToDataBaseParams" для передачи параметров в этот метод.
        /// </summary>
        public void AddAndFindTeacherToDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxSPEdit = this.UIForm1Window.UITextBoxSPWindow.UITextBoxSPEdit;
            WinEdit uITextBoxDEPARTMENTEdit = this.UIForm1Window.UITextBoxDEPARTMENTWindow.UITextBoxDEPARTMENTEdit;
            WinEdit uITextBoxNMBEdit = this.UIForm1Window.UITextBoxNMBWindow.UITextBoxNMBEdit;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow1.UIДобавитьButton;
            WinButton uIОКButton = this.UIБазаДанныхWindow.UIОКWindow.UIОКButton;
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            WinEdit uITextBoxLSTNAMEEdit = this.UIForm1Window.UITextBoxLSTNAMEWindow.UITextBoxLSTNAMEEdit;
            WinEdit uITextBoxPHONEEdit = this.UIForm1Window.UI__________Window.UITextBoxPHONEEdit;
            WinEdit uITextBoxEXPEdit = this.UIForm1Window.UITextBoxEXPWindow.UITextBoxEXPEdit;
            WinComboBox uIComboBoxGROUPComboBox = this.UIForm1Window.UIComboBoxGROUPWindow.UIComboBoxGROUPComboBox;
            WinButton uIДобавитьButton1 = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            WinEdit uITextBoxSearchTextEdit = this.UIForm1Window.UITextBoxSearchTextWindow.UITextBoxSearchTextEdit;
            WinButton uIНайтиButton = this.UIForm1Window.UIНайтиWindow.UIНайтиButton;
            #endregion

            // Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.AddAndFindTeacherToDataBaseParams.UIForm1WindowExePath, this.AddAndFindTeacherToDataBaseParams.UIForm1WindowAlternateExePath);

            // Тип "2012-ИВТ" в "textBoxSP" надпись
            uITextBoxSPEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxSPEditText;

            // Тип "ИиПО" в "textBoxDEPARTMENT" надпись
            uITextBoxDEPARTMENTEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxDEPARTMENTEditText;

            // Тип "2012" в "textBoxNMB" надпись
            uITextBoxNMBEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxNMBEditText;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(37, 10));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(49, 14));

            // Тип "Крис" в "textBoxNAME" надпись
            uITextBoxNAMEEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxNAMEEditText;

            // Тип "Прэт" в "textBoxLSTNAME" надпись
            uITextBoxLSTNAMEEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxLSTNAMEEditText;

            // Тип "(238) 479-2347" в "textBoxPHONE" надпись
            uITextBoxPHONEEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxPHONEEditText;

            // Тип "Мастер" в "textBoxEXP" надпись
            uITextBoxEXPEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxEXPEditText;

            // Выберите "2012-ИВТ" в "comboBoxGROUP" поле со списком
            uIComboBoxGROUPComboBox.SelectedItem = this.AddAndFindTeacherToDataBaseParams.UIComboBoxGROUPComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton1, new Point(51, 15));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(31, 4));

            // Тип "Крис" в "textBoxSearchText" надпись
            uITextBoxSearchTextEdit.Text = this.AddAndFindTeacherToDataBaseParams.UITextBoxSearchTextEditText;

            // Щелкните "Найти" кнопка
            Mouse.Click(uIНайтиButton, new Point(56, 10));
        }
        
        /// <summary>
        /// NEWAddAndFindTeacherToDataBase - Используйте "NEWAddAndFindTeacherToDataBaseParams" для передачи параметров в этот метод.
        /// </summary>
        public void NEWAddAndFindTeacherToDataBase()
        {
            #region Variable Declarations
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            WinEdit uITextBoxLSTNAMEEdit = this.UIForm1Window.UITextBoxLSTNAMEWindow.UITextBoxLSTNAMEEdit;
            WinEdit uITextBoxPHONEEdit = this.UIForm1Window.UI__________Window.UITextBoxPHONEEdit;
            WinEdit uITextBoxEXPEdit = this.UIForm1Window.UITextBoxEXPWindow.UITextBoxEXPEdit;
            WinComboBox uIComboBoxGROUPComboBox = this.UIForm1Window.UIComboBoxGROUPWindow.UIComboBoxGROUPComboBox;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            WinButton uIОКButton = this.UIБазаДанныхWindow.UIОКWindow.UIОКButton;
            WinEdit uITextBoxSearchTextEdit = this.UIForm1Window.UITextBoxSearchTextWindow.UITextBoxSearchTextEdit;
            WinButton uIНайтиButton = this.UIForm1Window.UIНайтиWindow.UIНайтиButton;
            #endregion

            // Запустить %ProgramFiles%\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe с аргументами "Software\Microsoft\VisualStudio\15.0_aba9d3b1\ScriptedPlugins" "Software\Microsoft\VisualStudio\15.0_aba9d3b1_Config\ScriptedPlugins" e70670 1a10 "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE/PrivateAssemblies/plugin.vs.js"
            ApplicationUnderTest scriptedSandbox64Application = ApplicationUnderTest.Launch(this.NEWAddAndFindTeacherToDataBaseParams.ExePath, this.NEWAddAndFindTeacherToDataBaseParams.AlternateExePath, "\"Software\\Microsoft\\VisualStudio\\15.0_aba9d3b1\\ScriptedPlugins\" \"Software\\Microso" +
                    "ft\\VisualStudio\\15.0_aba9d3b1_Config\\ScriptedPlugins\" e70670 1a10 \"C:/Program Fi" +
                    "les (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE/PrivateAssemblies/" +
                    "plugin.vs.js\"");

            // Тип "Мартин" в "textBoxNAME" надпись
            uITextBoxNAMEEdit.Text = this.NEWAddAndFindTeacherToDataBaseParams.UITextBoxNAMEEditText;

            // Тип "Лоуренс" в "textBoxLSTNAME" надпись
            uITextBoxLSTNAMEEdit.Text = this.NEWAddAndFindTeacherToDataBaseParams.UITextBoxLSTNAMEEditText;

            // Тип "(464) 958-6749" в "textBoxPHONE" надпись
            uITextBoxPHONEEdit.Text = this.NEWAddAndFindTeacherToDataBaseParams.UITextBoxPHONEEditText;

            // Тип "Мастер" в "textBoxEXP" надпись
            uITextBoxEXPEdit.Text = this.NEWAddAndFindTeacherToDataBaseParams.UITextBoxEXPEditText;

            // Выберите "20-ИВТ" в "comboBoxGROUP" поле со списком
            uIComboBoxGROUPComboBox.SelectedItem = this.NEWAddAndFindTeacherToDataBaseParams.UIComboBoxGROUPComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(35, 11));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(31, 10));

            // Тип "Мартин" в "textBoxSearchText" надпись
            uITextBoxSearchTextEdit.Text = this.NEWAddAndFindTeacherToDataBaseParams.UITextBoxSearchTextEditText;

            // Щелкните "Найти" кнопка
            Mouse.Click(uIНайтиButton, new Point(32, 13));
        }
        
        /// <summary>
        /// NEWRecordedMethod1 - Используйте "NEWRecordedMethod1Params" для передачи параметров в этот метод.
        /// </summary>
        public void NEWRecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uITextBoxNAMEEdit = this.UIForm1Window.UITextBoxNAMEWindow.UITextBoxNAMEEdit;
            WinEdit uITextBoxLSTNAMEEdit = this.UIForm1Window.UITextBoxLSTNAMEWindow.UITextBoxLSTNAMEEdit;
            WinEdit uITextBoxPHONEEdit = this.UIForm1Window.UI__________Window.UITextBoxPHONEEdit;
            WinEdit uITextBoxEXPEdit = this.UIForm1Window.UITextBoxEXPWindow.UITextBoxEXPEdit;
            WinComboBox uIComboBoxGROUPComboBox = this.UIForm1Window.UIComboBoxGROUPWindow.UIComboBoxGROUPComboBox;
            WinButton uIДобавитьButton = this.UIForm1Window.UIДобавитьWindow.UIДобавитьButton;
            WinButton uIОКButton = this.UIБазаДанныхWindow.UIОКWindow.UIОКButton;
            WinEdit uITextBoxSearchTextEdit = this.UIForm1Window.UITextBoxSearchTextWindow.UITextBoxSearchTextEdit;
            WinButton uIНайтиButton = this.UIForm1Window.UIНайтиWindow.UIНайтиButton;
            #endregion

            // Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
            ApplicationUnderTest uIForm1Window = ApplicationUnderTest.Launch(this.NEWRecordedMethod1Params.UIForm1WindowExePath, this.NEWRecordedMethod1Params.UIForm1WindowAlternateExePath);

            // Тип "Людвиг" в "textBoxNAME" надпись
            uITextBoxNAMEEdit.Text = this.NEWRecordedMethod1Params.UITextBoxNAMEEditText;

            // Тип "Людвиг" в "textBoxLSTNAME" надпись
            uITextBoxLSTNAMEEdit.Text = this.NEWRecordedMethod1Params.UITextBoxLSTNAMEEditText;

            // Тип "(435) 893-8467" в "textBoxPHONE" надпись
            uITextBoxPHONEEdit.Text = this.NEWRecordedMethod1Params.UITextBoxPHONEEditText;

            // Тип "Мастер" в "textBoxEXP" надпись
            uITextBoxEXPEdit.Text = this.NEWRecordedMethod1Params.UITextBoxEXPEditText;

            // Выберите "18-ИВТ" в "comboBoxGROUP" поле со списком
            uIComboBoxGROUPComboBox.SelectedItem = this.NEWRecordedMethod1Params.UIComboBoxGROUPComboBoxSelectedItem;

            // Щелкните "Добавить" кнопка
            Mouse.Click(uIДобавитьButton, new Point(25, 10));

            // Щелкните "ОК" кнопка
            Mouse.Click(uIОКButton, new Point(27, 7));

            // Тип "Людвиг" в "textBoxSearchText" надпись
            uITextBoxSearchTextEdit.Text = this.NEWRecordedMethod1Params.UITextBoxSearchTextEditText;

            // Щелкните "Найти" кнопка
            Mouse.Click(uIНайтиButton, new Point(24, 6));
        }
        
        /// <summary>
        /// NewAssertMethod1 - Используйте "NewAssertMethod1ExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void NewAssertMethod1()
        {
            #region Variable Declarations
            WinEdit uITextBoxAnswerNameEdit = this.UIForm1Window.UITextBoxAnswerNameWindow.UITextBoxAnswerNameEdit;
            #endregion

            // Убедитесь, что свойство Text "textBoxAnswerName" надпись равняется "Людвиг"
            Assert.AreEqual(this.NewAssertMethod1ExpectedValues.UITextBoxAnswerNameEditText, uITextBoxAnswerNameEdit.Text);
        }
        
        /// <summary>
        /// NewAssertMethod2 - Используйте "NewAssertMethod2ExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void NewAssertMethod2()
        {
            #region Variable Declarations
            WinEdit uITextBoxAnswerSpecEdit = this.UIForm1Window.UITextBoxAnswerSpecWindow.UITextBoxAnswerSpecEdit;
            #endregion

            // Убедитесь, что свойство Text "textBoxAnswerSpec" надпись равняется "18-ИВТ"
            Assert.AreEqual(this.NewAssertMethod2ExpectedValues.UITextBoxAnswerSpecEditText, uITextBoxAnswerSpecEdit.Text);
        }
        
        /// <summary>
        /// NewAssertMethodGroup - Используйте "NewAssertMethodGroupExpectedValues" для передачи параметров в этот метод.
        /// </summary>
        public void NewAssertMethodGroup()
        {
            #region Variable Declarations
            WinEdit uITextBoxAnswerSpecEdit = this.UIForm1Window.UITextBoxAnswerSpecWindow.UITextBoxAnswerSpecEdit;
            #endregion

            // Убедитесь, что свойство Text "textBoxAnswerSpec" надпись равняется "18-ИВТ"
            Assert.AreEqual(this.NewAssertMethodGroupExpectedValues.UITextBoxAnswerSpecEditText, uITextBoxAnswerSpecEdit.Text);
        }
        
        #region Properties
        public virtual RecordedMethodAddTeacherToDataBaseParams RecordedMethodAddTeacherToDataBaseParams
        {
            get
            {
                if ((this.mRecordedMethodAddTeacherToDataBaseParams == null))
                {
                    this.mRecordedMethodAddTeacherToDataBaseParams = new RecordedMethodAddTeacherToDataBaseParams();
                }
                return this.mRecordedMethodAddTeacherToDataBaseParams;
            }
        }
        
        public virtual AssertMethodTeacherExpectedValues AssertMethodTeacherExpectedValues
        {
            get
            {
                if ((this.mAssertMethodTeacherExpectedValues == null))
                {
                    this.mAssertMethodTeacherExpectedValues = new AssertMethodTeacherExpectedValues();
                }
                return this.mAssertMethodTeacherExpectedValues;
            }
        }
        
        public virtual RecordedMethodFindTeacherToDataBaseParams RecordedMethodFindTeacherToDataBaseParams
        {
            get
            {
                if ((this.mRecordedMethodFindTeacherToDataBaseParams == null))
                {
                    this.mRecordedMethodFindTeacherToDataBaseParams = new RecordedMethodFindTeacherToDataBaseParams();
                }
                return this.mRecordedMethodFindTeacherToDataBaseParams;
            }
        }
        
        public virtual AssertMethodTeacherFindExpectedValues AssertMethodTeacherFindExpectedValues
        {
            get
            {
                if ((this.mAssertMethodTeacherFindExpectedValues == null))
                {
                    this.mAssertMethodTeacherFindExpectedValues = new AssertMethodTeacherFindExpectedValues();
                }
                return this.mAssertMethodTeacherFindExpectedValues;
            }
        }
        
        public virtual AssertMethodEqualTeacherNameExpectedValues AssertMethodEqualTeacherNameExpectedValues
        {
            get
            {
                if ((this.mAssertMethodEqualTeacherNameExpectedValues == null))
                {
                    this.mAssertMethodEqualTeacherNameExpectedValues = new AssertMethodEqualTeacherNameExpectedValues();
                }
                return this.mAssertMethodEqualTeacherNameExpectedValues;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AssertMethodAreEqualTeacherSearchExpectedValues AssertMethodAreEqualTeacherSearchExpectedValues
        {
            get
            {
                if ((this.mAssertMethodAreEqualTeacherSearchExpectedValues == null))
                {
                    this.mAssertMethodAreEqualTeacherSearchExpectedValues = new AssertMethodAreEqualTeacherSearchExpectedValues();
                }
                return this.mAssertMethodAreEqualTeacherSearchExpectedValues;
            }
        }
        
        public virtual AssertMethodEqualExpectedValues AssertMethodEqualExpectedValues
        {
            get
            {
                if ((this.mAssertMethodEqualExpectedValues == null))
                {
                    this.mAssertMethodEqualExpectedValues = new AssertMethodEqualExpectedValues();
                }
                return this.mAssertMethodEqualExpectedValues;
            }
        }
        
        public virtual AssertMethodEqualNameDataBaseExpectedValues AssertMethodEqualNameDataBaseExpectedValues
        {
            get
            {
                if ((this.mAssertMethodEqualNameDataBaseExpectedValues == null))
                {
                    this.mAssertMethodEqualNameDataBaseExpectedValues = new AssertMethodEqualNameDataBaseExpectedValues();
                }
                return this.mAssertMethodEqualNameDataBaseExpectedValues;
            }
        }
        
        public virtual RecordedMethodNEWAddTeacherToDATABASEParams RecordedMethodNEWAddTeacherToDATABASEParams
        {
            get
            {
                if ((this.mRecordedMethodNEWAddTeacherToDATABASEParams == null))
                {
                    this.mRecordedMethodNEWAddTeacherToDATABASEParams = new RecordedMethodNEWAddTeacherToDATABASEParams();
                }
                return this.mRecordedMethodNEWAddTeacherToDATABASEParams;
            }
        }
        
        public virtual RecordedNEWMethodAddTeacherToDataBaseParams RecordedNEWMethodAddTeacherToDataBaseParams
        {
            get
            {
                if ((this.mRecordedNEWMethodAddTeacherToDataBaseParams == null))
                {
                    this.mRecordedNEWMethodAddTeacherToDataBaseParams = new RecordedNEWMethodAddTeacherToDataBaseParams();
                }
                return this.mRecordedNEWMethodAddTeacherToDataBaseParams;
            }
        }
        
        public virtual AddTeacherToDataBaseParams AddTeacherToDataBaseParams
        {
            get
            {
                if ((this.mAddTeacherToDataBaseParams == null))
                {
                    this.mAddTeacherToDataBaseParams = new AddTeacherToDataBaseParams();
                }
                return this.mAddTeacherToDataBaseParams;
            }
        }
        
        public virtual FindTeacherToDataBaseParams FindTeacherToDataBaseParams
        {
            get
            {
                if ((this.mFindTeacherToDataBaseParams == null))
                {
                    this.mFindTeacherToDataBaseParams = new FindTeacherToDataBaseParams();
                }
                return this.mFindTeacherToDataBaseParams;
            }
        }
        
        public virtual AddAndFindTeacherToDataBaseParams AddAndFindTeacherToDataBaseParams
        {
            get
            {
                if ((this.mAddAndFindTeacherToDataBaseParams == null))
                {
                    this.mAddAndFindTeacherToDataBaseParams = new AddAndFindTeacherToDataBaseParams();
                }
                return this.mAddAndFindTeacherToDataBaseParams;
            }
        }
        
        public virtual NEWAddAndFindTeacherToDataBaseParams NEWAddAndFindTeacherToDataBaseParams
        {
            get
            {
                if ((this.mNEWAddAndFindTeacherToDataBaseParams == null))
                {
                    this.mNEWAddAndFindTeacherToDataBaseParams = new NEWAddAndFindTeacherToDataBaseParams();
                }
                return this.mNEWAddAndFindTeacherToDataBaseParams;
            }
        }
        
        public virtual NEWRecordedMethod1Params NEWRecordedMethod1Params
        {
            get
            {
                if ((this.mNEWRecordedMethod1Params == null))
                {
                    this.mNEWRecordedMethod1Params = new NEWRecordedMethod1Params();
                }
                return this.mNEWRecordedMethod1Params;
            }
        }
        
        public virtual NewAssertMethod1ExpectedValues NewAssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mNewAssertMethod1ExpectedValues == null))
                {
                    this.mNewAssertMethod1ExpectedValues = new NewAssertMethod1ExpectedValues();
                }
                return this.mNewAssertMethod1ExpectedValues;
            }
        }
        
        public virtual NewAssertMethod2ExpectedValues NewAssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mNewAssertMethod2ExpectedValues == null))
                {
                    this.mNewAssertMethod2ExpectedValues = new NewAssertMethod2ExpectedValues();
                }
                return this.mNewAssertMethod2ExpectedValues;
            }
        }
        
        public virtual NewAssertMethodGroupExpectedValues NewAssertMethodGroupExpectedValues
        {
            get
            {
                if ((this.mNewAssertMethodGroupExpectedValues == null))
                {
                    this.mNewAssertMethodGroupExpectedValues = new NewAssertMethodGroupExpectedValues();
                }
                return this.mNewAssertMethodGroupExpectedValues;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        
        public UIБазаДанныхWindow UIБазаДанныхWindow
        {
            get
            {
                if ((this.mUIБазаДанныхWindow == null))
                {
                    this.mUIБазаДанныхWindow = new UIБазаДанныхWindow();
                }
                return this.mUIБазаДанныхWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethodAddTeacherToDataBaseParams mRecordedMethodAddTeacherToDataBaseParams;
        
        private AssertMethodTeacherExpectedValues mAssertMethodTeacherExpectedValues;
        
        private RecordedMethodFindTeacherToDataBaseParams mRecordedMethodFindTeacherToDataBaseParams;
        
        private AssertMethodTeacherFindExpectedValues mAssertMethodTeacherFindExpectedValues;
        
        private AssertMethodEqualTeacherNameExpectedValues mAssertMethodEqualTeacherNameExpectedValues;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AssertMethodAreEqualTeacherSearchExpectedValues mAssertMethodAreEqualTeacherSearchExpectedValues;
        
        private AssertMethodEqualExpectedValues mAssertMethodEqualExpectedValues;
        
        private AssertMethodEqualNameDataBaseExpectedValues mAssertMethodEqualNameDataBaseExpectedValues;
        
        private RecordedMethodNEWAddTeacherToDATABASEParams mRecordedMethodNEWAddTeacherToDATABASEParams;
        
        private RecordedNEWMethodAddTeacherToDataBaseParams mRecordedNEWMethodAddTeacherToDataBaseParams;
        
        private AddTeacherToDataBaseParams mAddTeacherToDataBaseParams;
        
        private FindTeacherToDataBaseParams mFindTeacherToDataBaseParams;
        
        private AddAndFindTeacherToDataBaseParams mAddAndFindTeacherToDataBaseParams;
        
        private NEWAddAndFindTeacherToDataBaseParams mNEWAddAndFindTeacherToDataBaseParams;
        
        private NEWRecordedMethod1Params mNEWRecordedMethod1Params;
        
        private NewAssertMethod1ExpectedValues mNewAssertMethod1ExpectedValues;
        
        private NewAssertMethod2ExpectedValues mNewAssertMethod2ExpectedValues;
        
        private NewAssertMethodGroupExpectedValues mNewAssertMethodGroupExpectedValues;
        
        private UIForm1Window mUIForm1Window;
        
        private UIБазаДанныхWindow mUIБазаДанныхWindow;
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedMethodAddTeacherToDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RecordedMethodAddTeacherToDataBaseParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\Ник\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe" +
            "";
        
        /// <summary>
        /// Тип "Alexey" в "textBoxSearchText" надпись
        /// </summary>
        public string UITextBoxSearchTextEditText = "Alexey";
        
        /// <summary>
        /// Тип "Alexey" в "textBoxSearchText" надпись
        /// </summary>
        public string UITextBoxSearchTextEditText1 = "Alexey";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethodTeacher"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethodTeacherExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Name "textBoxSearchText" надпись равняется "Alexey"
        /// </summary>
        public string UITextBoxSearchTextEditName = "Alexey";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedMethodFindTeacherToDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RecordedMethodFindTeacherToDataBaseParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "Will" в "textBoxNAME" надпись
        /// </summary>
        public string UITextBoxNAMEEditText = "Will";
        
        /// <summary>
        /// Тип "Smith" в "textBoxLSTNAME" надпись
        /// </summary>
        public string UITextBoxLSTNAMEEditText = "Smith";
        
        /// <summary>
        /// Тип "(345) 734-8957" в "textBoxPHONE" надпись
        /// </summary>
        public string UITextBoxPHONEEditText = "(345) 734-8957";
        
        /// <summary>
        /// Тип "Master" в "textBoxEXP" надпись
        /// </summary>
        public string UITextBoxEXPEditText = "Master";
        
        /// <summary>
        /// Выберите "19-ИиСТ" в "comboBoxGROUP" поле со списком
        /// </summary>
        public string UIComboBoxGROUPComboBoxSelectedItem = "19-ИиСТ";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethodTeacherFind"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethodTeacherFindExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство ControlName "textBoxSearchText" окно равняется "Alexey"
        /// </summary>
        public string UITextBoxSearchTextWindowControlName = "Alexey";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethodEqualTeacherName"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethodEqualTeacherNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство ControlName "textBoxSearchText" окно равняется "Alexey"
        /// </summary>
        public string UITextBoxSearchTextWindowControlName = "Alexey";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Name "textBoxSearchText" надпись равняется "Alexey"
        /// </summary>
        public string UITextBoxSearchTextEditName = "Alexey";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethodAreEqualTeacherSearch"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethodAreEqualTeacherSearchExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство ControlName "textBoxSearchText" окно равняется "Alexey"
        /// </summary>
        public string UITextBoxSearchTextWindowControlName = "Alexey";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethodEqual"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethodEqualExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBoxAnswerName" надпись равняется "Alexey"
        /// </summary>
        public string UITextBoxAnswerNameEditText = "Alexey";
        
        /// <summary>
        /// Убедитесь, что свойство Text "textBoxAnswerName" надпись равняется "Alexey"
        /// </summary>
        public string UITextBoxAnswerNameEditText1 = "Alexey";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AssertMethodEqualNameDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AssertMethodEqualNameDataBaseExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBoxNAME" надпись равняется "Will"
        /// </summary>
        public string UITextBoxNAMEEditText = "Will";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedMethodNEWAddTeacherToDATABASE"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RecordedMethodNEWAddTeacherToDATABASEParams
    {
        
        #region Fields
        /// <summary>
        /// Тип "2019-ИВТ-2" в "textBoxSP" надпись
        /// </summary>
        public string UITextBoxSPEditText = "2019-ИВТ-2";
        
        /// <summary>
        /// Тип "ИиПО" в "textBoxDEPARTMENT" надпись
        /// </summary>
        public string UITextBoxDEPARTMENTEditText = "ИиПО";
        
        /// <summary>
        /// Тип "438573945" в "textBoxNMB" надпись
        /// </summary>
        public string UITextBoxNMBEditText = "438573945";
        
        /// <summary>
        /// Тип "Брэд" в "textBoxNAME" надпись
        /// </summary>
        public string UITextBoxNAMEEditText = "Брэд";
        
        /// <summary>
        /// Тип "Питт" в "textBoxLSTNAME" надпись
        /// </summary>
        public string UITextBoxLSTNAMEEditText = "Питт";
        
        /// <summary>
        /// Тип "(348) 579-3458" в "textBoxPHONE" надпись
        /// </summary>
        public string UITextBoxPHONEEditText = "(348) 579-3458";
        
        /// <summary>
        /// Тип "Мастер" в "textBoxEXP" надпись
        /// </summary>
        public string UITextBoxEXPEditText = "Мастер";
        
        /// <summary>
        /// Выберите "2019-ИВТ-2" в "comboBoxGROUP" поле со списком
        /// </summary>
        public string UIComboBoxGROUPComboBoxSelectedItem = "2019-ИВТ-2";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "RecordedNEWMethodAddTeacherToDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class RecordedNEWMethodAddTeacherToDataBaseParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\Ник\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe" +
            "";
        
        /// <summary>
        /// Тип "2018-ИВТ-2" в "textBoxSP" надпись
        /// </summary>
        public string UITextBoxSPEditText = "2018-ИВТ-2";
        
        /// <summary>
        /// Тип "ИиПО" в "textBoxDEPARTMENT" надпись
        /// </summary>
        public string UITextBoxDEPARTMENTEditText = "ИиПО";
        
        /// <summary>
        /// Тип "2385" в "textBoxNMB" надпись
        /// </summary>
        public string UITextBoxNMBEditText = "2385";
        
        /// <summary>
        /// Тип "Уилл" в "textBoxNAME" надпись
        /// </summary>
        public string UITextBoxNAMEEditText = "Уилл";
        
        /// <summary>
        /// Тип "Смит" в "textBoxLSTNAME" надпись
        /// </summary>
        public string UITextBoxLSTNAMEEditText = "Смит";
        
        /// <summary>
        /// Тип "(348) 985-3746" в "textBoxPHONE" надпись
        /// </summary>
        public string UITextBoxPHONEEditText = "(348) 985-3746";
        
        /// <summary>
        /// Тип "Мастер" в "textBoxEXP" надпись
        /// </summary>
        public string UITextBoxEXPEditText = "Мастер";
        
        /// <summary>
        /// Выберите "2018-ИВТ-2" в "comboBoxGROUP" поле со списком
        /// </summary>
        public string UIComboBoxGROUPComboBoxSelectedItem = "2018-ИВТ-2";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AddTeacherToDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AddTeacherToDataBaseParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\Ник\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe" +
            "";
        
        /// <summary>
        /// Тип "Дуэйн" в "textBoxNAME" надпись
        /// </summary>
        public string UITextBoxNAMEEditText = "Дуэйн";
        
        /// <summary>
        /// Тип "Джонсон" в "textBoxLSTNAME" надпись
        /// </summary>
        public string UITextBoxLSTNAMEEditText = "Джонсон";
        
        /// <summary>
        /// Тип "(345) 793-4579" в "textBoxPHONE" надпись
        /// </summary>
        public string UITextBoxPHONEEditText = "(345) 793-4579";
        
        /// <summary>
        /// Тип "Мастер" в "textBoxEXP" надпись
        /// </summary>
        public string UITextBoxEXPEditText = "Мастер";
        
        /// <summary>
        /// Выберите "19-ИиСТ" в "comboBoxGROUP" поле со списком
        /// </summary>
        public string UIComboBoxGROUPComboBoxSelectedItem = "19-ИиСТ";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "FindTeacherToDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class FindTeacherToDataBaseParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\Ник\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe" +
            "";
        
        /// <summary>
        /// Тип "Дуэйн" в "textBoxSearchText" надпись
        /// </summary>
        public string UITextBoxSearchTextEditText = "Дуэйн";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "AddAndFindTeacherToDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class AddAndFindTeacherToDataBaseParams
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\Ник\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe" +
            "";
        
        /// <summary>
        /// Тип "2012-ИВТ" в "textBoxSP" надпись
        /// </summary>
        public string UITextBoxSPEditText = "2012-ИВТ";
        
        /// <summary>
        /// Тип "ИиПО" в "textBoxDEPARTMENT" надпись
        /// </summary>
        public string UITextBoxDEPARTMENTEditText = "ИиПО";
        
        /// <summary>
        /// Тип "2012" в "textBoxNMB" надпись
        /// </summary>
        public string UITextBoxNMBEditText = "2012";
        
        /// <summary>
        /// Тип "Крис" в "textBoxNAME" надпись
        /// </summary>
        public string UITextBoxNAMEEditText = "Крис";
        
        /// <summary>
        /// Тип "Прэт" в "textBoxLSTNAME" надпись
        /// </summary>
        public string UITextBoxLSTNAMEEditText = "Прэт";
        
        /// <summary>
        /// Тип "(238) 479-2347" в "textBoxPHONE" надпись
        /// </summary>
        public string UITextBoxPHONEEditText = "(238) 479-2347";
        
        /// <summary>
        /// Тип "Мастер" в "textBoxEXP" надпись
        /// </summary>
        public string UITextBoxEXPEditText = "Мастер";
        
        /// <summary>
        /// Выберите "2012-ИВТ" в "comboBoxGROUP" поле со списком
        /// </summary>
        public string UIComboBoxGROUPComboBoxSelectedItem = "2012-ИВТ";
        
        /// <summary>
        /// Тип "Крис" в "textBoxSearchText" надпись
        /// </summary>
        public string UITextBoxSearchTextEditText = "Крис";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "NEWAddAndFindTeacherToDataBase"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NEWAddAndFindTeacherToDataBaseParams
    {
        
        #region Fields
        /// <summary>
        /// Запустить %ProgramFiles%\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe с аргументами "Software\Microsoft\VisualStudio\15.0_aba9d3b1\ScriptedPlugins" "Software\Microsoft\VisualStudio\15.0_aba9d3b1_Config\ScriptedPlugins" e70670 1a10 "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE/PrivateAssemblies/plugin.vs.js"
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\Privat" +
            "eAssemblies\\ScriptedSandbox64.exe";
        
        /// <summary>
        /// Запустить %ProgramFiles%\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe с аргументами "Software\Microsoft\VisualStudio\15.0_aba9d3b1\ScriptedPlugins" "Software\Microsoft\VisualStudio\15.0_aba9d3b1_Config\ScriptedPlugins" e70670 1a10 "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE/PrivateAssemblies/plugin.vs.js"
        /// </summary>
        public string AlternateExePath = "%ProgramFiles%\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\PrivateAssembl" +
            "ies\\ScriptedSandbox64.exe";
        
        /// <summary>
        /// Тип "Мартин" в "textBoxNAME" надпись
        /// </summary>
        public string UITextBoxNAMEEditText = "Мартин";
        
        /// <summary>
        /// Тип "Лоуренс" в "textBoxLSTNAME" надпись
        /// </summary>
        public string UITextBoxLSTNAMEEditText = "Лоуренс";
        
        /// <summary>
        /// Тип "(464) 958-6749" в "textBoxPHONE" надпись
        /// </summary>
        public string UITextBoxPHONEEditText = "(464) 958-6749";
        
        /// <summary>
        /// Тип "Мастер" в "textBoxEXP" надпись
        /// </summary>
        public string UITextBoxEXPEditText = "Мастер";
        
        /// <summary>
        /// Выберите "20-ИВТ" в "comboBoxGROUP" поле со списком
        /// </summary>
        public string UIComboBoxGROUPComboBoxSelectedItem = "20-ИВТ";
        
        /// <summary>
        /// Тип "Мартин" в "textBoxSearchText" надпись
        /// </summary>
        public string UITextBoxSearchTextEditText = "Мартин";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "NEWRecordedMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NEWRecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowExePath = "C:\\Users\\Ник\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe";
        
        /// <summary>
        /// Запуск "%USERPROFILE%\source\repos\Csharp_Lab_2\Csharp_lab_13\bin\Debug\Csharp_lab_13.exe"
        /// </summary>
        public string UIForm1WindowAlternateExePath = "%USERPROFILE%\\source\\repos\\Csharp_Lab_2\\Csharp_lab_13\\bin\\Debug\\Csharp_lab_13.exe" +
            "";
        
        /// <summary>
        /// Тип "Людвиг" в "textBoxNAME" надпись
        /// </summary>
        public string UITextBoxNAMEEditText = "Людвиг";
        
        /// <summary>
        /// Тип "Людвиг" в "textBoxLSTNAME" надпись
        /// </summary>
        public string UITextBoxLSTNAMEEditText = "Людвиг";
        
        /// <summary>
        /// Тип "(435) 893-8467" в "textBoxPHONE" надпись
        /// </summary>
        public string UITextBoxPHONEEditText = "(435) 893-8467";
        
        /// <summary>
        /// Тип "Мастер" в "textBoxEXP" надпись
        /// </summary>
        public string UITextBoxEXPEditText = "Мастер";
        
        /// <summary>
        /// Выберите "18-ИВТ" в "comboBoxGROUP" поле со списком
        /// </summary>
        public string UIComboBoxGROUPComboBoxSelectedItem = "18-ИВТ";
        
        /// <summary>
        /// Тип "Людвиг" в "textBoxSearchText" надпись
        /// </summary>
        public string UITextBoxSearchTextEditText = "Людвиг";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "NewAssertMethod1"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NewAssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBoxAnswerName" надпись равняется "Людвиг"
        /// </summary>
        public string UITextBoxAnswerNameEditText = "Людвиг";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "NewAssertMethod2"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NewAssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBoxAnswerSpec" надпись равняется "18-ИВТ"
        /// </summary>
        public string UITextBoxAnswerSpecEditText = "18-ИВТ";
        #endregion
    }
    
    /// <summary>
    /// Параметры для передачи в "NewAssertMethodGroup"
    /// </summary>
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class NewAssertMethodGroupExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Убедитесь, что свойство Text "textBoxAnswerSpec" надпись равняется "18-ИВТ"
        /// </summary>
        public string UITextBoxAnswerSpecEditText = "18-ИВТ";
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITextBoxSearchTextWindow UITextBoxSearchTextWindow
        {
            get
            {
                if ((this.mUITextBoxSearchTextWindow == null))
                {
                    this.mUITextBoxSearchTextWindow = new UITextBoxSearchTextWindow(this);
                }
                return this.mUITextBoxSearchTextWindow;
            }
        }
        
        public UIНайтиWindow UIНайтиWindow
        {
            get
            {
                if ((this.mUIНайтиWindow == null))
                {
                    this.mUIНайтиWindow = new UIНайтиWindow(this);
                }
                return this.mUIНайтиWindow;
            }
        }
        
        public UITextBoxNAMEWindow UITextBoxNAMEWindow
        {
            get
            {
                if ((this.mUITextBoxNAMEWindow == null))
                {
                    this.mUITextBoxNAMEWindow = new UITextBoxNAMEWindow(this);
                }
                return this.mUITextBoxNAMEWindow;
            }
        }
        
        public UITextBoxLSTNAMEWindow UITextBoxLSTNAMEWindow
        {
            get
            {
                if ((this.mUITextBoxLSTNAMEWindow == null))
                {
                    this.mUITextBoxLSTNAMEWindow = new UITextBoxLSTNAMEWindow(this);
                }
                return this.mUITextBoxLSTNAMEWindow;
            }
        }
        
        public UI__________Window UI__________Window
        {
            get
            {
                if ((this.mUI__________Window == null))
                {
                    this.mUI__________Window = new UI__________Window(this);
                }
                return this.mUI__________Window;
            }
        }
        
        public UITextBoxEXPWindow UITextBoxEXPWindow
        {
            get
            {
                if ((this.mUITextBoxEXPWindow == null))
                {
                    this.mUITextBoxEXPWindow = new UITextBoxEXPWindow(this);
                }
                return this.mUITextBoxEXPWindow;
            }
        }
        
        public UIComboBoxGROUPWindow UIComboBoxGROUPWindow
        {
            get
            {
                if ((this.mUIComboBoxGROUPWindow == null))
                {
                    this.mUIComboBoxGROUPWindow = new UIComboBoxGROUPWindow(this);
                }
                return this.mUIComboBoxGROUPWindow;
            }
        }
        
        public UIДобавитьWindow UIДобавитьWindow
        {
            get
            {
                if ((this.mUIДобавитьWindow == null))
                {
                    this.mUIДобавитьWindow = new UIДобавитьWindow(this);
                }
                return this.mUIДобавитьWindow;
            }
        }
        
        public UITextBoxAnswerNameWindow UITextBoxAnswerNameWindow
        {
            get
            {
                if ((this.mUITextBoxAnswerNameWindow == null))
                {
                    this.mUITextBoxAnswerNameWindow = new UITextBoxAnswerNameWindow(this);
                }
                return this.mUITextBoxAnswerNameWindow;
            }
        }
        
        public UITextBoxSPWindow UITextBoxSPWindow
        {
            get
            {
                if ((this.mUITextBoxSPWindow == null))
                {
                    this.mUITextBoxSPWindow = new UITextBoxSPWindow(this);
                }
                return this.mUITextBoxSPWindow;
            }
        }
        
        public UITextBoxDEPARTMENTWindow UITextBoxDEPARTMENTWindow
        {
            get
            {
                if ((this.mUITextBoxDEPARTMENTWindow == null))
                {
                    this.mUITextBoxDEPARTMENTWindow = new UITextBoxDEPARTMENTWindow(this);
                }
                return this.mUITextBoxDEPARTMENTWindow;
            }
        }
        
        public UITextBoxNMBWindow UITextBoxNMBWindow
        {
            get
            {
                if ((this.mUITextBoxNMBWindow == null))
                {
                    this.mUITextBoxNMBWindow = new UITextBoxNMBWindow(this);
                }
                return this.mUITextBoxNMBWindow;
            }
        }
        
        public UIДобавитьWindow1 UIДобавитьWindow1
        {
            get
            {
                if ((this.mUIДобавитьWindow1 == null))
                {
                    this.mUIДобавитьWindow1 = new UIДобавитьWindow1(this);
                }
                return this.mUIДобавитьWindow1;
            }
        }
        
        public UITextBoxAnswerSpecWindow UITextBoxAnswerSpecWindow
        {
            get
            {
                if ((this.mUITextBoxAnswerSpecWindow == null))
                {
                    this.mUITextBoxAnswerSpecWindow = new UITextBoxAnswerSpecWindow(this);
                }
                return this.mUITextBoxAnswerSpecWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITextBoxSearchTextWindow mUITextBoxSearchTextWindow;
        
        private UIНайтиWindow mUIНайтиWindow;
        
        private UITextBoxNAMEWindow mUITextBoxNAMEWindow;
        
        private UITextBoxLSTNAMEWindow mUITextBoxLSTNAMEWindow;
        
        private UI__________Window mUI__________Window;
        
        private UITextBoxEXPWindow mUITextBoxEXPWindow;
        
        private UIComboBoxGROUPWindow mUIComboBoxGROUPWindow;
        
        private UIДобавитьWindow mUIДобавитьWindow;
        
        private UITextBoxAnswerNameWindow mUITextBoxAnswerNameWindow;
        
        private UITextBoxSPWindow mUITextBoxSPWindow;
        
        private UITextBoxDEPARTMENTWindow mUITextBoxDEPARTMENTWindow;
        
        private UITextBoxNMBWindow mUITextBoxNMBWindow;
        
        private UIДобавитьWindow1 mUIДобавитьWindow1;
        
        private UITextBoxAnswerSpecWindow mUITextBoxAnswerSpecWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxSearchTextWindow : WinWindow
    {
        
        public UITextBoxSearchTextWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxSearchText";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxSearchTextEdit
        {
            get
            {
                if ((this.mUITextBoxSearchTextEdit == null))
                {
                    this.mUITextBoxSearchTextEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxSearchTextEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя преподавателя";
                    this.mUITextBoxSearchTextEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxSearchTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxSearchTextEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIНайтиWindow : WinWindow
    {
        
        public UIНайтиWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonSearch";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIНайтиButton
        {
            get
            {
                if ((this.mUIНайтиButton == null))
                {
                    this.mUIНайтиButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIНайтиButton.SearchProperties[WinButton.PropertyNames.Name] = "Найти";
                    this.mUIНайтиButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIНайтиButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIНайтиButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxNAMEWindow : WinWindow
    {
        
        public UITextBoxNAMEWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxNAME";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxNAMEEdit
        {
            get
            {
                if ((this.mUITextBoxNAMEEdit == null))
                {
                    this.mUITextBoxNAMEEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxNAMEEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxNAMEEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxNAMEEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxLSTNAMEWindow : WinWindow
    {
        
        public UITextBoxLSTNAMEWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxLSTNAME";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxLSTNAMEEdit
        {
            get
            {
                if ((this.mUITextBoxLSTNAMEEdit == null))
                {
                    this.mUITextBoxLSTNAMEEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxLSTNAMEEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxLSTNAMEEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxLSTNAMEEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UI__________Window : WinWindow
    {
        
        public UI__________Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxPHONE";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxPHONEEdit
        {
            get
            {
                if ((this.mUITextBoxPHONEEdit == null))
                {
                    this.mUITextBoxPHONEEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxPHONEEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxPHONEEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxPHONEEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxEXPWindow : WinWindow
    {
        
        public UITextBoxEXPWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxEXP";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxEXPEdit
        {
            get
            {
                if ((this.mUITextBoxEXPEdit == null))
                {
                    this.mUITextBoxEXPEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxEXPEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxEXPEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxEXPEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIComboBoxGROUPWindow : WinWindow
    {
        
        public UIComboBoxGROUPWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "comboBoxGROUP";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIComboBoxGROUPComboBox
        {
            get
            {
                if ((this.mUIComboBoxGROUPComboBox == null))
                {
                    this.mUIComboBoxGROUPComboBox = new WinComboBox(this);
                    #region Условия поиска
                    this.mUIComboBoxGROUPComboBox.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIComboBoxGROUPComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIComboBoxGROUPComboBox;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДобавитьWindow : WinWindow
    {
        
        public UIДобавитьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonTeacher";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxAnswerNameWindow : WinWindow
    {
        
        public UITextBoxAnswerNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxAnswerName";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxAnswerNameEdit
        {
            get
            {
                if ((this.mUITextBoxAnswerNameEdit == null))
                {
                    this.mUITextBoxAnswerNameEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxAnswerNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Кол - во студентов";
                    this.mUITextBoxAnswerNameEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxAnswerNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxAnswerNameEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxSPWindow : WinWindow
    {
        
        public UITextBoxSPWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxSP";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxSPEdit
        {
            get
            {
                if ((this.mUITextBoxSPEdit == null))
                {
                    this.mUITextBoxSPEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxSPEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Кол - во студентов";
                    this.mUITextBoxSPEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxSPEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxSPEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxDEPARTMENTWindow : WinWindow
    {
        
        public UITextBoxDEPARTMENTWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxDEPARTMENT";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxDEPARTMENTEdit
        {
            get
            {
                if ((this.mUITextBoxDEPARTMENTEdit == null))
                {
                    this.mUITextBoxDEPARTMENTEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxDEPARTMENTEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxDEPARTMENTEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxDEPARTMENTEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxNMBWindow : WinWindow
    {
        
        public UITextBoxNMBWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxNMB";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxNMBEdit
        {
            get
            {
                if ((this.mUITextBoxNMBEdit == null))
                {
                    this.mUITextBoxNMBEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxNMBEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxNMBEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxNMBEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIДобавитьWindow1 : WinWindow
    {
        
        public UIДобавитьWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonGroup";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьButton
        {
            get
            {
                if ((this.mUIДобавитьButton == null))
                {
                    this.mUIДобавитьButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIДобавитьButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить";
                    this.mUIДобавитьButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIДобавитьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьButton;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UITextBoxAnswerSpecWindow : WinWindow
    {
        
        public UITextBoxAnswerSpecWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBoxAnswerSpec";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBoxAnswerSpecEdit
        {
            get
            {
                if ((this.mUITextBoxAnswerSpecEdit == null))
                {
                    this.mUITextBoxAnswerSpecEdit = new WinEdit(this);
                    #region Условия поиска
                    this.mUITextBoxAnswerSpecEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITextBoxAnswerSpecEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBoxAnswerSpecEdit;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIБазаДанныхWindow : WinWindow
    {
        
        public UIБазаДанныхWindow()
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.Name] = "База Данных";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("База Данных");
            #endregion
        }
        
        #region Properties
        public UIОКWindow UIОКWindow
        {
            get
            {
                if ((this.mUIОКWindow == null))
                {
                    this.mUIОКWindow = new UIОКWindow(this);
                }
                return this.mUIОКWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIОКWindow mUIОКWindow;
        #endregion
    }
    
    [GeneratedCode("Построитель кодированных тестов ИП", "15.0.26208.0")]
    public class UIОКWindow : WinWindow
    {
        
        public UIОКWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Условия поиска
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("База Данных");
            #endregion
        }
        
        #region Properties
        public WinButton UIОКButton
        {
            get
            {
                if ((this.mUIОКButton == null))
                {
                    this.mUIОКButton = new WinButton(this);
                    #region Условия поиска
                    this.mUIОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mUIОКButton.WindowTitles.Add("База Данных");
                    #endregion
                }
                return this.mUIОКButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОКButton;
        #endregion
    }
}
